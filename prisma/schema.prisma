generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model buyers {
  id               String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name             String             @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  password         String             @db.VarChar(255)
  phone            String             @db.VarChar(255)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  updated_at       DateTime?          @db.Timestamp(6)
  deleted_at       DateTime?          @db.Timestamp(6)
  buyers_locations buyers_locations[]
  orders           orders[]
}

model buyers_locations {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  buyer_id    String    @db.Uuid
  location_id String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  buyers      buyers    @relation(fields: [buyer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  locations   locations @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model food_languages {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  food_id     String    @db.Uuid
  language_id String    @db.Uuid
  title       String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  foods       foods     @relation(fields: [food_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  languages   languages @relation(fields: [language_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model foods {
  id                  String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  default_title       String           @db.VarChar(255)
  default_description String?          @db.VarChar(255)
  price               Decimal          @db.Decimal(10, 2)
  created_at          DateTime?        @default(now()) @db.Timestamp(6)
  updated_at          DateTime?        @db.Timestamp(6)
  deleted_at          DateTime?        @db.Timestamp(6)
  food_languages      food_languages[]
  order_foods         order_foods[]
}

model languages {
  id             String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name           String           @db.VarChar(255)
  code           String           @db.VarChar(255)
  created_at     DateTime?        @default(now()) @db.Timestamp(6)
  updated_at     DateTime?        @db.Timestamp(6)
  deleted_at     DateTime?        @db.Timestamp(6)
  food_languages food_languages[]
}

model locations {
  id               String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  lat              Decimal            @db.Decimal(14, 11)
  lan              Decimal            @db.Decimal(14, 11)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  updated_at       DateTime?          @db.Timestamp(6)
  deleted_at       DateTime?          @db.Timestamp(6)
  buyers_locations buyers_locations[]
  orders           orders[]
  sellers          sellers[]

  @@index([lat, lan], map: "idx_locations")
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  run_on DateTime @db.Timestamp(6)
}

model order_foods {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id   String    @db.Uuid
  food_id    String    @db.Uuid
  quantity   Int?      @default(1)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  foods      foods     @relation(fields: [food_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders     orders    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model orders {
  id          String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  seller_id   String        @db.Uuid
  buyer_id    String        @db.Uuid
  location_id String        @db.Uuid
  total       Decimal       @db.Decimal(10, 2)
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  updated_at  DateTime?     @db.Timestamp(6)
  deleted_at  DateTime?     @db.Timestamp(6)
  order_foods order_foods[]
  buyers      buyers        @relation(fields: [buyer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  locations   locations     @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sellers     sellers       @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sellers {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String     @db.VarChar(255)
  email       String     @unique @db.VarChar(255)
  password    String     @db.VarChar(255)
  phone       String     @db.VarChar(255)
  location_id String?    @db.Uuid
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  updated_at  DateTime?  @db.Timestamp(6)
  deleted_at  DateTime?  @db.Timestamp(6)
  orders      orders[]
  locations   locations? @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
